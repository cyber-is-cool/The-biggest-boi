#!/bin/bash

# ---------------------------------- [ USAGE ] ----------------------------------
# Welcome to Sai and Funder's epic linux hardening script! This is truly a
# beautiful sight to behold.
# 
# This script has been written for Cyber Centurion, and therefore legally CANNOT
# be re-used in competitions by subsequent competitors. Please keep that in mind
# that we are enabled to hand this down to whoever we please in the future.
# 
# The basic usage rules for this script is:
#       * Run inside a screen or tmux (most preferable) as some services dying can
#           cause your terminal emulator to die. 
#
#       * Run once otherwise you may mess up some configs
# 
# This script also requires some extra input from the user in the format of .txt 
# files. These files and their purposes are listed below (the should be in the
# same directory as the script, unless you want to recode that section yourself):
# 
#       [1] users.txt
#           * usernames on each line, allowed on the machine
#
#       [2] sudoers.txt
#           * usernames on each line, allowed sudoers
#
#       [3] critical_services.txt
#           + service names on each line, to be configured. 
#
#           + The services can be
#               * apache2
#               * nginx
#               * php
#               * ssh 
#               * vsftpd
#               * pure-ftpd
#               * proftpd
#               * samba
#               * mysql
#
# You will thoroughly benefit from using a terminal emulator capable of showing 
# nice colours. 
#
# This script will also sometimes ask for prompts. These are expected to be 
# single letters Y or N (case doesn't matter). By default, it assumes you 
# typed N. 
# 
# There are log files generated by this script in a folder created in the same
# directory as the script is ran in called 'backup'. Look through this after 
# script has finished running for more information.
# 
# It is advisable to keep a root shell open at all times. 
# 
#
#

# Foreground Colours
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
LIGHTGREY=$(tput setaf 7)
WHITE=$(tput setaf 8)

UNDERLINE=$(tput smul)
ENDUNDERLINE=$(tput rmul)
BOLD=$(tput smso)
ENDBOLD=$(tput rmso)

CLEARSCREEN=$(tput clear)

# Resets everything
RESET=$(tput sgr 0)

# Global variables
USERS=$(grep -E "/bin/.*sh" /etc/passwd | grep -v -e root -e `whoami` -e speech-dispatcher | cut -d":" -f1)

DISTRO=$(lsb_release -i | cut -d: -f2 | sed "s/\\t//g")
CODENAME=$(lsb_release -c | cut -d: -f2 | sed "s/\\t//g")

APT=apt







# -------------------- APT functions -------------------- 
enable_autoupdate () {
    # Files necessary:
    #   NONE
    sudo $APT install -y unattended-upgrades apt-listchanges
    
    # Set automatic updates
    echo 'APT::Periodic::Update-Package-Lists "1";'             | sudo tee /etc/apt/apt.conf.d/10periodic > /dev/null
    echo 'APT::Periodic::Download-Upgradeable-Packages "1";'    | sudo tee -a /etc/apt/apt.conf.d/10periodic > /dev/null
    echo 'APT::Periodic::Unattended-Upgrade "1";'               | sudo tee -a /etc/apt/apt.conf.d/10periodic > /dev/null
    echo 'APT::Periodic::AutocleanInterval "7";'                | sudo tee -a /etc/apt/apt.conf.d/10periodic > /dev/null

    echo 'APT::Periodic::Update-Package-Lists "1";'             | sudo tee /etc/apt/apt.conf.d/20auto-upgrades > /dev/null
    echo 'APT::Periodic::Download-Upgradeable-Packages "1";'    | sudo tee -a /etc/apt/apt.conf.d/20auto-upgrades > /dev/null
    echo 'APT::Periodic::Unattended-Upgrade "1";'               | sudo tee -a /etc/apt/apt.conf.d/20auto-upgrades > /dev/null
    echo 'APT::Periodic::AutocleanInterval "7";'                | sudo tee -a /etc/apt/apt.conf.d/20auto-upgrades > /dev/null
}

fix_sources_list () { 
    local ubuntu_sources="
deb http://us.archive.ubuntu.com/ubuntu/ CHANGEME main restricted\n
deb http://us.archive.ubuntu.com/ubuntu/ CHANGEME-updates main restricted\n
deb http://us.archive.ubuntu.com/ubuntu/ CHANGEME universe\n
deb http://us.archive.ubuntu.com/ubuntu/ CHANGEME-updates universe\n
deb http://us.archive.ubuntu.com/ubuntu/ CHANGEME multiverse\n
deb http://us.archive.ubuntu.com/ubuntu/ CHANGEME-updates multiverse\n
deb http://us.archive.ubuntu.com/ubuntu/ CHANGEME-backports main restricted universe multiverse\n
deb http://security.ubuntu.com/ubuntu CHANGEME-security main restricted\n
deb http://security.ubuntu.com/ubuntu CHANGEME-security universe\n
deb http://security.ubuntu.com/ubuntu CHANGEME-security multiverse\n

deb-src http://us.archive.ubuntu.com/ubuntu/ CHANGEME main restricted\n
deb-src http://us.archive.ubuntu.com/ubuntu/ CHANGEME-updates main restricted\n
deb-src http://us.archive.ubuntu.com/ubuntu/ CHANGEME universe\n
deb-src http://us.archive.ubuntu.com/ubuntu/ CHANGEME-updates universe\n
deb-src http://us.archive.ubuntu.com/ubuntu/ CHANGEME multiverse\n
deb-src http://us.archive.ubuntu.com/ubuntu/ CHANGEME-updates multiverse\n
deb-src http://us.archive.ubuntu.com/ubuntu/ CHANGEME-backports main restricted universe multiverse\n
deb-src http://security.ubuntu.com/ubuntu CHANGEME-security main restricted\n
deb-src http://security.ubuntu.com/ubuntu CHANGEME-security universe\n
deb-src http://security.ubuntu.com/ubuntu CHANGEME-security multiverse\n
"

    local debian_sources="
deb http://deb.debian.org/debian CHANGEME main\n
deb-src http://deb.debian.org/debian CHANGEME main\n
deb http://deb.debian.org/debian-security/ CHANGEME/updates main\n
deb-src http://deb.debian.org/debian-security/ CHANGEME/updates main\n
deb http://deb.debian.org/debian CHANGEME-updates main\n
deb-src http://deb.debian.org/debian CHANGEME-updates main\n
"

    sudo cp -r /etc/apt/sources.list* backup/apt/ 
    sudo rm -f /etc/apt/sources.list 
    case $DISTRO in 
        Debian)
            echo -e $debian_sources | sed "s/ deb/deb/g; s/CHANGEME/${CODENAME}/g" | sudo tee /etc/apt/sources.list > /dev/null
            ;;
        Ubuntu)
            echo -e $ubuntu_sources | sed "s/ deb/deb/g; s/CHANGEME/${CODENAME}/g" | sudo tee /etc/apt/sources.list > /dev/null
            ;;
        *)  
            sudo cp backup/apt/sources.list /etc/apt/sources.list
            echo -e "${RED}${BOLD}Distro not recognised!\nExiting#${RESET}"
            exit 1
            ;;

    esac
}

install_necessary_packages () {
    sudo $APT install -y ufw
    sudo $APT install -y tmux
    sudo $APT install -y vim
    sudo $APT install -y unhide
    sudo $APT install -y auditd
    sudo $APT install -y psad
    sudo $APT install -y fail2ban
    sudo $APT install -y aide
    sudo $APT install -y tcpd
    sudo $APT install -y libpam-cracklib
    sudo $APT install -y tree
}

update () {
    # Files necessary:
    #   NONE
    sudo $APT update && sudo $APT upgrade -y
}

enumerate_packages () {
    # Files necessary:
    #   NONE

    sudo apt list --installed > backup/apt/apt_list_installed_packages.log
    sudo dpkg -l > backup/apt/dpkg_installed_packages.log # more useful

    # Manually installed
    sudo apt-mark showmanual > backup/apt/manually_installed_packages.log

}

remove_malware () {
    # Files necessary:
    #   NONE

    echo "${RED}Please make sure you are 100% sure that there is no critcial services in this before running!!${RESET}"
    declare -a arr=(john, abc, sqlmap, aria2
                    aquisition, bitcomet, bitlet, bitspirit
                    endless-sky, zenmap, minetest, minetest-server
                    armitage, crack, apt pureg knocker, aircrack-ng
                    airbase-ng, hydra, freeciv
                    wireshark, tshark
                    hydra-gtk, netcat, netcat-traditional, netcat-openbsd
                    netcat-ubuntu, netcat-minimal, qbittorrent, ctorrent
                    ktorrent, rtorrent, deluge, transmission-common
                    transmission-bittorrent-client, tixati, frostwise, vuse
                    irssi, transmission-gtk, utorrent, kismet
                    medusa, telnet, exim4, telnetd
                    bind9, crunch, tcpdump, tomcat
                    tomcat6, vncserver, tightvnc, tightvnc-common
                    tightvncserver, vnc4server, nmdb, dhclient
                    telnet-server, ophcrack, cryptcat, cups
                    cupsd, tcpspray, ettercap
                    wesnoth, snort, pryit
                    weplab, wireshark, nikto, lcrack
                    postfix, snmp, icmp, dovecot
                    pop3, p0f, dsniff, hunt
                    ember, nbtscan, rsync, freeciv-client-extras
                    freeciv-data, freeciv-server, freeciv-client-gtk
                    )

    for i in "${arr[@]}"
    do
        sudo $APT purge -y --force-yes $i
    done
}



# -------------------- Main functions -------------------- 

main_apt () {
    echo "${GREEN}[*] Reverting sources.list file to default ...${RESET}"
    fix_sources_list
    sudo $APT update

    echo "${GREEN}[*] Enabling auto updates ...${RESET}"
    enable_autoupdate

    # echo "${GREEN}[*] Uninstalling any packages breaching policies ... ${RESET}"
    # remove_malware

    echo "${GREEN}[*] Updating all packages (this may take a long time) ... ${RESET}"
    update

    echo "${GREEN}[*] Installing necessary packages ... ${RESET}"
    install_necessary_packages

    echo "${GREEN}[*] Enumerating packages ${BOLD}saved to backups/apt/${RESET}"
    enumerate_packages
}


# Function to run everything
main () {
    echo -n "${CLEARSCREEN}"
    echo "${GREEN}For best performance, please run this script using ${BOLD}TMUX${RESET}"

    # Make the backup directories
    mkdir -p backup/users
    mkdir -p backup/pam
    mkdir -p backup/apt
    
    mkdir -p backup/services
    mkdir -p backup/services/crons
    mkdir -p backup/services/startup

    mkdir -p backup/networking
    mkdir -p backup/system
    mkdir -p backup/malware

    mkdir -p backup/misc
    mkdir -p backup/misc/media

    # Ensure all config files can be edited
    echo "${GREEN}[*] Chattr'ing all files ... ${RESET}"
    chattr_all_config_files

    echo "${GREEN}[*] Installing apt-fast ... ${RESET}"
    # Apt fast install (different for ubuntu and debian)
    case $DISTRO in 
        Ubuntu)
            sudo apt install -y software-properties-common
            sudo add-apt-repository ppa:apt-fast/stable -y
            ;;
        Debian)
            sudo rm -f /etc/apt/sources.list.d/*
            echo "deb http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main" | sudo tee /etc/apt/sources.list.d/apt-fast.list > /dev/null
            echo "deb-src http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main" | sudo tee -a /etc/apt/sources.list.d/apt-fast.list > /dev/null
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B
            ;;
    esac

    sudo apt-get update
    #sudo DEBIAN_FRONTEND=noninteractive apt install -y apt-fast && APT=apt-fast

    # Each main section
    main_apt
    main_users
    main_pam
    main_networking
    main_services
    main_system
    main_malware

}
main

